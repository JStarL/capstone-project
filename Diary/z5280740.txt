Week 1

We formed our group before our Friday lab class and had set up our team on Moodle.
We spent time during lab deciding which project to choose.
I volunteered to be scrum master.
We were talking about various things like:
    potential novel ideas
    software and libraries to use

Week 2

We chose Project 1 - Wait Management System, and spent most of the week through
lengthy brainstorming sessions of figuring out what could be our novel functionalities.
We came up with several ideas and discussed them with our tutor and lecturer.
We finished the basic user stories on Jira, decided on our sprint structure and
finished the background of the proposal.
We plan to select our novel ideas towards the beginning of Week 3, and add user stories for these
Patrick and I will also complete the storyboards, software architecture diagram and
technical specifications of the project for the proposal by Thursday, Week 3.

Week 3

Early in week 3, we finally decided our novel functionalities.
Throughout Week 3, all of us were busy working on the proposal,
which was successfully submitted by the deadline. My main parts
were to work on some of the customer storyboards like the persona related
screens and the basic screens like looking at menu item descriptions.
I also did a lot of reviewing of the storyboards as a whole, and sat with Rohan
to review and finalise the sprint screenshots.
Next week we plan to work on deciding what work there is to build the system,
and who will be doing what, as well as  potentially create an interface
between the backend and frontend so that we can all start working together.

Week 4
On Monday we had a meeting where we discussed and elaborated on the
interface between the frontend and backend (think SwaggerDocs), and
all routes and associated information that would be sent to either the frontend or backend.

We spent a considerable amount of time trying to setup the vm environment, which we had to
choose because of our choice of PostgreSQL. I spent a lot of time helping Rohan and Pat with VM setup,
and created a SETUP.md file in the main branch to make everyone's life easier.

Later in the week, I learnt some SQL and made the initial database schema (without data), and also discussed and
made changes to some of the backend Flask wrapper functions.

For next week we plan to continue coding, and I would probably help with the backend psycopg2 functions which need SQL
and do a little bit of frontend coding, like for the customer meu browsing screen

Week 5
This week we all put in plenty of effort to complete our sprint goals by Friday of Week 5. I had a personal
deadline to finish all of my designated backend routes and designing the initial database schema
by the end of Wednesday, so that Thursday could be allocated for integration and testing puropses.
I finished my work by the end of Wednesday, and throughout Wednesday and Thursday was doing the main task of
debugging and troubleshooting where William or Hannah would find a bug or error pop up,
and then I would go look for the source of the issue. Some issues were frontend based, and others were backend based.
I dealt mainly with the backend and database errors, but also helped with resolving frontend errors a little bit.
Ultimately we achieved all of the goals we had set for this sprint, however it took till just before the lab time
on Friday which I think can be improved on.

For next week, we plan to be more organised by choosing which user stories to cover for the next sprint,
delegating work to everyone, and then setting small deadlines through the week to complete our work,
and then beginning to write code for some user stories.

Week 6
On Monday, we held a meeting where we discussed our trajectory of progress and delegatd work and users storiies.
This was surrounding  tasks like who does what parts in the frontend UI and backend routes. We split tasks and
set a minor deadline among ourselves that by the end of Saturday, Week 5, backend people would complete a certain amount of routes,
frontend people would finish up styling the UI, and I would focus on making the necessary database changes for implementing our
novel user stories. We mostly met the deadline, as the frontend styling and all backend routes  were completed, including
the backend and database additions for managing personas with allergies. However, one task remained, which was
implementing the Best Selling automation in the database, which we plan to complete the following week.

Technical obstacles we faced were my VM sometimes malfunctioning, and the frontend developers' local coding environment creating
errors in the database connection or Mac OsX system, which are external errors to our application. In addition to circumventing these
we had been debugging a series of bugs as they popped up, and modified the frontend and backend accordingly.

The plan for next week is to work on the Best Selling Automation, and assist in debugging and testing to make sure that
the frontend and backend integration is working as intended.

Week 7
Our overall progress was towards the completion of Sprint 2, with mostly the frontend tasks remaining. The backend and I worked on
a few more routes while we each reviewed each others' work. I continued working on the Best Selling Automation from the previous
week by adding a plpgsql function and trigger to the database, which appears to work for now, but requires adjustments after
more testing with the frontend. Besides this i helped the frontend debug errors as they popped up in various parts of both frontend, backend and the database layers, including one error which was actually a UI/UX misunderstanding!

Technical obstacles faced were the usual occassional VM malfunctions and the local environment throwing errors. Besides this, a lot of this week
was dedicated to debugging the various errors that popped up after implementing the novel functionalities, due to several combinations of factors.

Next week's plan is to review what we've completed so far and complete the remaining user stories for Sprint 2, work on debugging remaining issues and practising for Demo B, as well as prepare for Retrospective B.

Week 8
The progress for this week was smooth and we finished our sprint tasks neatly before the deadline. This meant that we had completed reviewing backend
route implementations, finished the frontend screens and components for the UI, connected both, and tested functionality for any bugs or defects well
before Friday. I personally implemented the novel functionalities in the backend, i.e. the main logic for excluding certain menu items with given allergy
ids from the view_menu or view_category results sent to the frontend, as well as a basic implementation of the automated Best Selling Category using a
simple points based system (for now). We finished before time and practised the demo on Wednesday and Thursday, including having sufficient time to 
complete our retrospective afterwards.

The plan for next week is to improve the implementation of the automated Best Selling Category using more parameters, and work on debugging the kitchen 
and wait staff screens and routes.

Week 9
Completed a lot of major things this week, especially over the weekend. During the week, mainly helped in debugging, testing and correcting code
snippets, and maintained consistent interactions with the frontend and backend. For the backend, we completed the final routes by the end of Friday.

On Saturday I implemented the second version of the Best Selling Automation using two parameters - the ratio of times the dish was ordered, and the
average rating given to that menu item. This was implemented across the backend and database layers, and involved complex trigger and plpgsql function
understanding in the database to complete.

On Sunday Hannah and I were working on implementing category exclusion of certain menu items from the Best Selling category based on what menu items
have already been ordered by a given persona. This proved to be the most challenging task encountered thus far! Hannah understood the main idea and
added some basic code in the architecture of the frontend. I spent a lot of time reading the frontend code to first understand it, and then based on what
I understood I wrote additional code to complete all related parts of the functionality of it, for example when a menu item is added to an order, the
category id to which it belongs gets automatically added to the exclusion list, or another example when a menu item is removed completely from the orders
list meaning its count is zero, its corresponding category id get removed from the exclusion list for that persona. Separate lists were maintained for
separate personas.

Next week we plan to refactor, style up and comment our codebase, finish the report, decide on a structure for the final demo, and then deliver the
project deliverables, one at a time.
